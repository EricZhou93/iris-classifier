###############################################################
#
#                      README
#
#      Assignment: A6 - Artificial Neural Networks
#      Authors:  Keren Zhou    (kzhou)
#      Date: 2020-12-14
#
###############################################################

Developing Environment: 
    Windows 10, Python 3.8.5, Anaconda, VSCode.
    It is recommended to run under the same environment.


Usage:
    python main.py [example_data]

    For example, python main.py "ANN - Iris data.txt"

    * example_data: File that contains example data.
        Data for each example takes one line as follows:
        <sepal_length>,<sepal_width>,<petal_length>,<petal-width>,<type>
        Length and width are in cm. 
        Type is one of Iris-setosa, Iris-versicolor and Iris-virginica.
    * If example_data is not provided, this program will use 
        "ANN - Iris data.txt" as the default example data file.
    * The program first trains the artificial neural network. During training, 
        it prints out number of rounds that the ANN has been trained and 
        computes the mean square error with a validation set.
    * After training, the program tests the ANN with a test set and reports its 
        confusion matrix and accuracy.
    * After test, user can input examples to classify. For each example, user 
        needs to input sepal length, sepal width, petal length and petal width 
        in cm according to the instruction. Then, it will report the Iris type 
        as result. User can stop by input any negative value.


Description:
    * This ANN is simple feed-forward network. Each neuron in a layer is 
    connect to all the neurons in the next layer.
    This ANN has 3 layers. From top to bottom, there is an input layer with 4 
    neurons, a hidden layer with 4 neurons and an output layer with 3 neurons.
    These 4 input neurons are for sepal length, sepal width, petal length and 
    petal width respectively. 
    These 3 output neurons are for degree of certainty (betwen 0 and 1) for 
    Iris Setosa, Iris Versicolour and Iris Virginica respectively. So, the 
    output of the ANN is in one-hot style.
    * This ANN uses sigmoid as the activation function. To fit sigmoid 
    function, inputs are first de-correlated using variance and then scaled 
    between -3 and 3. 
    * Learning rate is set to 0.1. Weights are randomly initialized between 
    -0.1 and 0.1.
    * The given examples are divided into a training set (50%), a validation 
    set (25%) and a test set (25%). Each set contains all 3 types of examples. 
    The ratio for all 3 types of plants are the same in each set.
    * For each round of training, ANN learns each example in the training set 
    for once. Then, we use validation set to compute mean square error (MSE) of 
    current ANN. If the difference between the current and the previous MSE is 
    less than 0.1%, we stop training. After training, we compute the accuracy 
    and the confusion matrix using the test set.


Files:
* README

* main.py
    Main driver for the artificial neural network.

* ann.py
    Implementation for the artificial neural network.

* ANN - Iris data.txt
    Default example data file.

* test.py
    Test main and playground.
